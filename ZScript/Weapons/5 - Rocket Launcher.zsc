// Rocket Launcher
// Faster than vanilla, but not overpowered hopefully.
class CFB_LoadedRocket : Ammo
{
	Default
	{
		Inventory.Icon "RKTGY0"; // Replace later
		Inventory.Amount 0;
		Inventory.MaxAmount 5; // Maybe change...?
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 5;
		+INVENTORY.IGNORESKILL
	}
}
class CFB_RocketLauncher : CFB_Weapon replaces RocketLauncher
{
	Default
	{
		+WEAPON.AMMO_OPTIONAL
		+WEAPON.EXPLOSIVE
		+WEAPON.NOALERT
		Weapon.SlotNumber 5;
		Weapon.AmmoType1 "CFB_LoadedRocket";
		Weapon.AmmoUse1 1;
		Weapon.AmmoType2 "CFB_RocketAmmo";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 2;

		Tag "$TAG_ROCKETLAUNCHER";
		// No Obituary defined here because this is a projectile weapon
		Inventory.PickupMessage "$GOTROCKETLAUNCHER";

		Weapon.UpSound "weapons/rlauncher/draw";
		Inventory.PickupSound "weapons/rlauncher/pickup";
		// No AttackSound defined here because this is a projectile weapon
	}
	States
	{
		Spawn:
			RKTG Z -1;
			Stop;
		Select:
			RKTG A 1 A_Raise(18); // Redo this later to be fancier? I think it'd be cool.
			Loop;
		Deselect:
			RKTG NNMMLLKKJJIIAA 1 A_Lower(18); // Ditto.
			Wait;
		Ready:
			RKTG A 1 A_WeaponReady;
			Loop;
		Fire:
			TNT1 A 0 A_AlertMonsters;
			TNT1 A 0 A_JumpIfInventory("CFB_LoadedRocket", 5, "Fire.Five");
			TNT1 A 0 A_JumpIfInventory("CFB_LoadedRocket", 4, "Fire.Four");
			TNT1 A 0 A_JumpIfInventory("CFB_LoadedRocket", 3, "Fire.Three");
			TNT1 A 0 A_JumpIfInventory("CFB_LoadedRocket", 2, "Fire.Two");
			TNT1 A 0 A_JumpIfNoAmmo("Fire.Empty");
			Goto Fire.One;
		Fire.Five:
			RKTG B 2;
			RKTG C 2 Bright {
				A_FireProjectile("CFB_Rocket", 10);
				A_FireProjectile("CFB_Rocket", 5);
				A_FireProjectile("CFB_Rocket");
				A_FireProjectile("CFB_Rocket", -5);
				A_FireProjectile("CFB_Rocket", -10);
				A_StartSound("weapons/rlauncher/fire", CHAN_WEAPON);
				A_GunFlash();
			}
			RKTG DDE 1 Bright;
			RKTG FGGGH 1;
			Goto PostFire;
		Fire.Four:
			RKTG B 2;
			RKTG C 2 Bright {
				A_FireProjectile("CFB_Rocket", 10);
				A_FireProjectile("CFB_Rocket", 5);
				A_FireProjectile("CFB_Rocket", -5);
				A_FireProjectile("CFB_Rocket", -10);
				A_StartSound("weapons/rlauncher/fire", CHAN_WEAPON);
				A_GunFlash();
			}
			RKTG DDE 1 Bright;
			RKTG FGGGH 1;
			Goto PostFire;
		Fire.Three:
			RKTG B 2;
			RKTG C 2 Bright {
				A_FireProjectile("CFB_Rocket", 5);
				A_FireProjectile("CFB_Rocket");
				A_FireProjectile("CFB_Rocket", -5);
				A_StartSound("weapons/rlauncher/fire", CHAN_WEAPON);
				A_GunFlash();
			}
			RKTG DDE 1 Bright;
			RKTG FGGGH 1;
			Goto PostFire;
		Fire.Two:
			RKTG B 2;
			RKTG C 2 Bright {
				A_FireProjectile("CFB_Rocket", 5);
				A_FireProjectile("CFB_Rocket", -5);
				A_StartSound("weapons/rlauncher/fire", CHAN_WEAPON);
				A_GunFlash();
			}
			RKTG DDE 1 Bright;
			RKTG FGGGH 1;
			Goto PostFire;
		Fire.One:
			RKTG B 2;
			RKTG C 2 Bright {
				A_FireProjectile("CFB_Rocket");
				A_StartSound("weapons/rlauncher/fire", CHAN_WEAPON);
				A_GunFlash();
			}
			RKTG DDE 1 Bright;
			RKTG FGGGH 1;
			Goto PostFire;
		AltFire:
			Goto PostFire;
		Fire.Empty:
			RKTG A 2;
			RKTG H 2 A_StartSound("weapons/empty", CHAN_WEAPON);
			RKTG G 7;
			RKTG H 1;
			Goto PostFire;
		PostFire:
			TNT1 A 0 A_JumpIfInventory("CFB_LoadedRocket", 5, "Ready");
			RKTG I 3 A_StartSound("weapons/rlauncher/load_out", CHAN_5);
			RKTG JK 3;
			TNT1 A 0 A_JumpIfInventory("CFB_RocketAmmo", 1, 1);
			Goto PostFire.Empty;
			RKTG L 2 {
				A_StartSound("weapons/rlauncher/load_in", CHAN_6);
				A_TakeInventory("CFB_RocketAmmo", 1);
				A_GiveInventory("CFB_LoadedRocket", 1);
			}
			RKTG MN 2;
			RKTG A 2 A_StartSound("weapons/rlauncher/loaded", CHAN_7);
			Goto Ready;
		PostFire.Empty:
			RKTG K 2 A_StartSound("weapons/rlauncher/load_in", CHAN_6);
			RKTG JI 2;
			RKTG A 2;
			Goto Ready;
		Flash:
			TNT1 A 2 Bright A_AttachLightDef("Flash", "CFB_GunFlash");
			TNT1 A 0 A_RemoveLight("Flash");
			Stop;
	}
}
class CFB_Rocket : Actor
{
	Default
	{
		Radius 11;
		Height 8;
		Speed 40;
		DamageFunction (90);
		DamageType "Rocket";
		Projectile;
		DeathSound "weapons/rlauncher/explode";
		Obituary "$KILLROCKETLAUNCHER";
		Decal "Scorch";
	}
	States
	{
		Spawn:
			PROC A 4 Bright {
				A_StartSound("weapons/rlauncher/travel", CHAN_BODY, CHANF_LOOPING);
				A_SpawnItemEx("RocketSmokeTrail", zofs: -4);
			}
			Loop;
		Death:
			PROC B 3 Bright {
				A_Explode();
				A_SetRenderStyle(1, STYLE_ColorAdd);
			}
			PROC C 2 Bright A_FadeOut(0.2);
			PROC DE 2 Bright A_FadeOut(0.2);
			PROC EFF 1 Bright A_FadeOut(0.1);
			Stop;
	}
}