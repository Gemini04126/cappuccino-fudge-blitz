class CFBAddon_LeverShotgun : CFB_PumpShotgun replaces CFB_PumpShotgun
{
	Default
	{
		Tag "$TAG_CFBADDLSHOTGUN";
		Obituary "$KILLCFBADDLSHOTGUN";
		Inventory.PickupMessage "$GOTCFBADDLSHOTGUN";

		Weapon.UpSound "weapons/addons/lshotgun/draw";
		Inventory.PickupSound "weapons/addons/lshotgun/pickup";
		AttackSound "weapons/addons/lshotgun/fire";
	}
	States
	{
		Spawn:
			LASG Z -1;
			Stop;
		Select:
			TNT1 A 0 A_QuickRaise();
			LASG X 1 A_WeaponOffset(90, 122, WOF_INTERPOLATE);
			LASG X 1 A_WeaponOffset(60, 92, WOF_INTERPOLATE);
			LASG X 1 A_WeaponOffset(40, 72, WOF_INTERPOLATE);
			LASG W 1 A_WeaponOffset(20, 52, WOF_INTERPOLATE);
			LASG V 1 A_WeaponOffset(10, 42, WOF_INTERPOLATE);
			LASG A 1 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			Goto Ready;
		Deselect:
			LASG A 1 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			LASG V 1 A_WeaponOffset(10, 42, WOF_INTERPOLATE);
			LASG W 1 A_WeaponOffset(20, 52, WOF_INTERPOLATE);
			LASG X 1 A_WeaponOffset(40, 72, WOF_INTERPOLATE);
			LASG X 1 A_WeaponOffset(60, 92, WOF_INTERPOLATE);
			LASG X 1 A_WeaponOffset(90, 122, WOF_INTERPOLATE);
			TNT1 A 0 A_WeaponOffset(0, 32);
			TNT1 A 0 A_QuickLower();
			Stop;
		Ready:
			LASG A 1 A_WeaponReady(WRF_ALLOWRELOAD);
			Loop;
		Fire:
			LASG A 0 A_JumpIfNoAmmo("FireEmpty");
			LASG B 1 Bright Offset(0, 36) {
				A_OverlayPivot(OverlayID(), 0.665, 0.5);
				A_FireBullets(2.8, 2.8, 7, 13, "CFB_ShotgunPuff", FBF_USEAMMO|FBF_NORANDOM, missile: "CFB_BulletTracer", -2.5);
				A_GunFlash();
				A_OverlayScale(OverlayID(), 1.1);
			}
			LASG B 1 Bright Offset(0, 52) A_OverlayScale(OverlayID(), 1.3);
			LASG B 2 Offset (0, 57) A_OverlayScale(OverlayID(), 1.4);
			LASG B 2 Offset (0, 47) A_OverlayScale(OverlayID(), 1.2);
			LASG B 2 Offset (0, 37) A_OverlayScale(OverlayID(), 1.1);
			LASG B 2 Offset (0, 32) A_OverlayScale(OverlayID(), 1.0);
			LASG CDE 2;
			LASG FGHII 1;
			LASG J 3 A_StartSound("weapons/addons/lshotgun/cock_back", CHAN_BODY);
			LASG IIHGF 1;
			LASG E 3 A_StartSound("weapons/addons/lshotgun/cock_forward", CHAN_BODY);
			LASG DCA 2;
			LASG A 2 A_ReFire;
			Goto Ready;
/*		AltFire:
			LASG A 0 A_JumpIfInventory("CFB_PumpShotgunAmmo", 1, 1);
			Goto FireEmpty;
			LASG B 1 Bright Offset(0, 36) {
				A_OverlayPivot(OverlayID(), 0.665, 0.5);
				invoker.DepleteAmmo(false, true);
				A_FireBullets(2.8, 2.8, 7, 13, "CFB_ShotgunPuff", FBF_NORANDOM, missile: "CFB_BulletTracer", -2.5);
				A_GunFlash();
				A_OverlayScale(OverlayID(), 1.1);
			}
			LASG B 1 Bright Offset(0, 52) A_OverlayScale(OverlayID(), 1.3);
			LASG B 2 Offset (0, 57) A_OverlayScale(OverlayID(), 1.4);
			LASG B 2 Offset (0, 47) A_OverlayScale(OverlayID(), 1.2);
			LASG B 2 Offset (0, 37) A_OverlayScale(OverlayID(), 1.1);
			LASG B 2 Offset (0, 32) A_OverlayScale(OverlayID(), 1.0);
			LASG KLMN 2;
			LASG O 2 A_StartSound("weapons/addons/lshotgun/cock_back", CHAN_BODY);
			LASG PQRST 2;
			LASG U 2 A_StartSound("weapons/addons/lshotgun/cock_forward", CHAN_BODY);
			LASG A 2;
			LASG A 2 A_ReFire;
			Goto Ready;*/
		FireEmpty:
			TNT1 A 0 A_JumpIfInventory("CFB_Shells", 1, "ReloadEmpty");
			LASG B 3 Offset (0, 37) {
				A_StartSound("weapons/empty");
				A_OverlayPivot(OverlayID(), 0.665, 0.5);
				A_OverlayScale(OverlayID(), 1.1);
			}
			LASG A 9 Offset (0, 32) A_OverlayScale(OverlayID(), 1.0);
			Goto Ready;
		Reload:
		// Check for shells, and if you're already full.
			TNT1 A 0 A_JumpIfInventory("CFB_PumpShotgunAmmo", 0, "Ready");
			TNT1 A 0 A_JumpIfNoAmmo("ReloadEmpty");
			TNT1 A 0 A_JumpIfInventory("CFB_Shells", 1, 1);
			Goto Ready;
			PSHG BCD 2;
			PSHG EF 1;
			PSHG F 3;
		Reload.Repeat:
			// if full on ammo, finish reload
			TNT1 A 0 A_JumpIfInventory("CFB_PumpShotgunAmmo", 0, "Reload.Finish");
			// if at least 1 shell to load, continue
			TNT1 A 0 A_JumpIfInventory("CFB_Shells", 1, 1);
			Goto Reload.Finish;
			PSHG OPQ 2;
			// exchange shell for ammo
			TNT1 A 0 {
				A_GiveInventory("CFB_PumpShotgunAmmo", 1);
				A_Takeinventory("CFB_Shells",1);
			}
			PSHG R 2 A_StartSound("weapons/pshotgun/load");
			PSHG SSTT 1 A_JumpIf(IsPressed(BT_ATTACK), "Reload.Finish");
			Goto Reload.Repeat;
		Reload.Finish:
			PSHG U 2;
			PSHG FE 1;
			PSHG DCBA 2;
			Goto Ready;
		ReloadEmpty:
			// if at least 1 shell to load, continue
			TNT1 A 0 A_JumpIfInventory("CFB_Shells", 1, 1);
			Goto Ready;
			PSHG BCD 2;
			PSHG EF 1;
			PSHG F 3;
			PSHG OPQ 2;
			// exchange shell for ammo
			TNT1 A 0 {
				A_GiveInventory("CFB_PumpShotgunAmmo", 1);
				A_Takeinventory("CFB_Shells",1);
			}
			PSHG R 2 A_StartSound("weapons/pshotgun/load");
			PSHG STU 2;
			PSHG FFFGHH 1;
			PSHG I 4 A_StartSound("weapons/pshotgun/pump_in", CHAN_BODY);
			PSHG HHG 1;
			PSHG F 3 A_StartSound("weapons/pshotgun/pump_out", CHAN_BODY);
			TNT1 A 0 A_JumpIf(IsPressed(BT_ATTACK), "Reload.Finish");
			Goto Reload.Repeat;
		Flash:
			TNT1 A 2 A_AttachLightDef("Flash", "CFB_GunFlash");
			TNT1 A 0 A_RemoveLight("Flash");
			Stop;
	}
}